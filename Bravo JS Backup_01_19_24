/*
This file will contain any JS backup in the following 16 Bravo protocols found in the production folder
1. single_dispense_mastermix_transfer_for_384w_qpcr_setup.pro
2. rna_transfer_for_384w_qpcr_setup.pro
3. 4_mastermix_columns_to_4_quadrants_mastermix_transfer_for_384w_qpcr_setup.pro
4. bromophenol_blue_stamping.pro
5. OD600_assay_stamping.pro
6. phosphate_solubility_stamping.pro
7. picogreen_costar_source_plate.pro
8. picogreen_htp.pro
9. picogreen_kingfisher_source_plate.pro
10. rna_quant.pro
11. rna_quant_standards_plate.pro
12. super_stamping.pro
13. maintenance.pro
14. microbial_serial_dilution.pro
15.Parameterizable Serial Dilutions.pro
16. soil_dna_extraction.pro
*/

  //single_dispense_mastermix_transfer_for_384w_qpcr_setup.pro

// === Startup protocol section>Javascript Command ===
var mastermixTransferVolume = 15;
var multiDispenseLiquidClass = "96 Water Fast Multidispense";
var dispenseHeight = 3;
var sourceColumnNumber = 1;
var dispenseColumn = 1;

// === Main Protocol section>Javascript Command ===
var dispenseColumn = outerLoopCount;

// === Main Protocol section>Tips On (Bravo) Command ===
task.Wellselection = [[1, sourceColumnNumber]]

// === Main Protocol section>Aspirate (Bravo) Command ===
task.Wellselection = [[1, sourceColumnNumber]];

// === Main Protocol section>Dispense (Bravo) ===
// Dispense to Quadrants 1 & 2
if (outerLoopCount == 1)
{
task.Wellselection = [[1, dispenseColumn]];
}

if (outerLoopCount == 2)
{
task.skip();
}

// === Main Protocol section>Dispense (Bravo) Command ===
// Dispense to Quadrants 3 & 4
if (outerLoopCount == 1)
{
task.skip();
}

if (outerLoopCount == 2)
{
task.Wellselection = [[2, dispenseColumn]];
}

// === Main Protocol section>Javascript ===
var tipDropLocation = 10+sourceColumnNumber;

// === Main Protocol section>Tips Off in 1 selection(s) ===
task.Wellselection = [[1, tipDropLocation]]




  //rna_transfer_for_384w_qpcr_setup.pro

// === Startup protocol section>Javascript Command ===
var transferVolume = 0
var loopCount = 0
var tipBoxIndex = 1
var blowoutVolume = 10

// === Main Protocol section>Display User Image Command ===
if (loopCount == 1)
{
task.skip();
}

if (loopCount == 2)
{
task.skip();
}

if (loopCount == 4)
{
task.skip();
}

// === Main Protocol section>Dispense (Bravo) Command ===
// Dispense to Quadrant 1

if (loopCount != 1)
{
task.skip()
}

// === Main Protocol section>Dispense (Bravo) Command ===
// Dispense to Quadrant 1

if (loopCount != 1)
{
task.skip()
}


// === Main Protocol section>Dispense (Bravo) Command ===
// Dispense to Quadrant 3

if (loopCount != 3)
{
task.skip()
}

// === Main Protocol section>Dispense (Bravo) Command ===
// Dispense to Quadrant 3

if (loopCount != 3)
{
task.skip()
}

// === Main Protocol section>Dispense (Bravo) Command ===
// Dispense to Quadrant 2

if (loopCount != 2)
{
task.skip()
}


// === Main Protocol section>Dispense (Bravo) Command ===
// Dispense to Quadrant 2

if (loopCount != 2)
{
task.skip()
}

// === Main Protocol section>Dispense (Bravo) Command ===
// Dispense to Quadrant 4

if (loopCount != 4)
{
task.skip()
}

// === Main Protocol section>Dispense (Bravo) Command ===
// Dispense to Quadrant 4

if (loopCount != 4)
{
task.skip()
}

// === Main Protocol section>Javascript Command ===
tipBoxIndex = tipBoxIndex + 1;

if (loopCount == 2)
{
tipBoxIndex = tipBoxIndex + 1;
}




//4_mastermix_columns_to_4_quadrants_mastermix_transfer_for_384w_qpcr_setup.pro

// === Startup protocol section>Javascript Command ===
var mastermixTransferVolume = 15;
var multiDispenseLiquidClass = "96 Water Fast Multidispense";
var dispenseHeight = 3;
var sourceColumnNumber = 1;
var dispenseColumn = 1;

// === Main Protocol section>Javascript Command ===
var dispenseColumn = outerLoopCount;

// === Main Protocol section>Tips On (Bravo) Command ===
task.Wellselection = [[1, sourceColumnNumber]]

// === Main Protocol section>Aspirate (Bravo) ===
task.Wellselection = [[1, sourceColumnNumber]];

// === Main Protocol section>Dispense Command ===
// Dispense to Quadrant 1

if (outerLoopCount == 1)
{
task.Wellselection = [[1, dispenseColumn]];
}

if (outerLoopCount == 2)
{
task.skip();
}

if (outerLoopCount == 3)
{
task.skip();
}

if (outerLoopCount == 4)
{
task.skip();
}


// === Main Protocol section>Dispense Command ===
// Dispense to Quadrant 2

if (outerLoopCount == 1)
{
task.skip();
}

if (outerLoopCount == 2)
{
task.Wellselection = [[1, dispenseColumn+1]];
}

if (outerLoopCount == 3)
{
task.skip();
}

if (outerLoopCount == 4)
{
task.skip();
}

// === Main Protocol section>Dispense Command ===
// Dispense to Quadrant 3

if (outerLoopCount == 1)
{
task.skip();
}

if (outerLoopCount == 2)
{
task.skip();
}

if (outerLoopCount == 3)
{
task.Wellselection = [[2, dispenseColumn]];
}

if (outerLoopCount == 4)
{
task.skip();
}

// === Main Protocol section>Dispense Command ===
// Dispense to Quadrant 4

if (outerLoopCount == 1)
{
task.skip();
}

if (outerLoopCount == 2)
{
task.skip();
}

if (outerLoopCount == 3)
{
task.skip();
}

if (outerLoopCount == 4)
{
task.Wellselection = [[2, dispenseColumn+1]];
}

// === Main Protocol section>Javascript Command ===
var tipDropLocation = 8+sourceColumnNumber;

// === Main Protocol section>Tips Off i 1 selection(s) Command ===
task.Wellselection = [[1, tipDropLocation]]




//bromophenol_blue_stamping.pro

// === Startup protocol section>Move above Location 1 Command ===
var liquidClass1 = "96 Water Medium";




//OD600_assay_stamping.pro

// === Startup protocol section>Javascript Command ===
var liquidClass1 = "96 Water Medium";




//phosphate_solubility_stamping.pro

N/a




//picogreen_costar_source_plate.pro

// === Startup protocol section>Javascript Command ===
var sourcePlateType = "96w Clear CoStar Plate"
var sourcePlateType = "96w KingFisher Plate"

if (sourcePlateType == "96w Clear CoStar Plate")
{
sourceAspirationHeight = 40;
}

if (sourcePlateType == "96w KingFisher Plate")
{
sourceAspirationHeight = 3;
}

// === Main Protocol>Javascipt Command (disabled) ===
if (sourcePlateType == "96w Clear CoStar Plate")
{
sourceAspirationHeight = 40;
}

if (sourcePlateType == "96w KingFisher Plate")
{
sourceAspirationHeight = 3;
}

var "sourceAspirationHeight"

if (sourcePlateType == "96w Clear CoStar Plate")
{
sourceAspirationHeight = 40;
}

if (sourcePlateType == "96w KingFisher Plate")
{
sourceAspirationHeight = 3;
}





//High Throughput Picogreen Assay setup

// === Startup protocol section>Javascript Command ===
// Temp variable for testing purposes, delete when ready
// var dna_source_labware_type = "Clear Flat-Bottom Plate"

// Set platepad positions for Configure Static Labware task for user input step_to_run = Transfer DNA to assay plates
if (step_to_run == "Transfer DNA to assay plates")
{
    // Set dna_source_labware_type with user input proxy value from dropdown menu in VWForm
    if (dna_source_labware_type == "Clear Flat-Bottom Plate")
    {
    var source_labware = "96 Greiner 655101 PS Clr Rnd Well Flat Btm";
    }

    if (dna_source_labware_type == "KingFisher Elution Plate")
    {
    var source_labware = "96 Thermo KingFisher PP 450ul SWP";
    }

    if (dna_source_labware_type == "PCR Plate")
    {
    var source_labware = "96 NEST 402601 PP 300ul PCR";
    }

    if (dna_source_labware_type == "1mL DeepWell Plate")
    {
    var source_labware = "96 Thermo 260252 PP 1ml MWP";
    }

    if (dna_source_labware_type == "2mL DeepWell Plate")
    {
    var source_labware = "96 Thermo 278743 PP 2mL DWP";
    }

var platepad_1 = "96 Axygen VTF20RS Tip Box 20ul Filtered";
var platepad_2 = "96 Axygen VTF20RS Tip Box 20ul Filtered";
var platepad_3 = "96 Axygen VTF20RS Tip Box 20ul Filtered";
var platepad_4 = source_labware;
var platepad_5 = source_labware;
var platepad_6 = source_labware;
var platepad_7 = "96 Costar 3792 Black Opaque Bottom PS 375ul SWP";
var platepad_8 = "96 Costar 3792 Black Opaque Bottom PS 375ul SWP";
var platepad_9 = "96 Costar 3792 Black Opaque Bottom PS 375ul SWP";
}

// Set platepad positions for Configure Static Labware task for user input step_to_run = Add TE buffer to assay plates or Add PicoGreen working solution to assay plates
if ((step_to_run == "Add TE buffer to assay plates") || (step_to_run == "Add PicoGreen working solution to assay plates"))
{
var platepad_1 = "96 Costar 3792 Black Opaque Bottom PS 375ul SWP";
var platepad_2 = "96 Costar 3792 Black Opaque Bottom PS 375ul SWP";
var platepad_3 = "96 Costar 3792 Black Opaque Bottom PS 375ul SWP";
var platepad_4 = "96 Costar 3792 Black Opaque Bottom PS 375ul SWP";
var platepad_5 = "96 Costar 3792 Black Opaque Bottom PS 375ul SWP";
var platepad_6 = "96 Costar 3792 Black Opaque Bottom PS 375ul SWP";
var platepad_7 = "96 Costar 3792 Black Opaque Bottom PS 375ul SWP";
var platepad_8 = "96 Axygen VTF165LRS Tip Box 165ul Filtered";
var platepad_9 = "1 Thermo 12001301 PP 300ml Reservoir";
}

// === Startup protocol section>Configure static labware Command ===
print(platepad_1)
print(platepad_2)
print(platepad_3)
print(platepad_4)
print(platepad_5)
print(platepad_6)
print(platepad_7)
print(platepad_8)
print(platepad_9)

// === Main Protocol section>Javascript Command ===
if (step_to_run == "Add TE buffer to assay plates")
{
var process_selection_value = 1;
}

if (step_to_run == "Transfer DNA to assay plates")
{
var process_selection_value = 2;
}

if (step_to_run == "Add PicoGreen working solution to assay plates")
{
var process_selection_value = 3;
}

// === Main Protocol section>Javascript Command ===
var preaspirate_volume = 10
var transfer_volume = 95
var liquid_class = "96 Water Fast"


// === Main Protocol section>Javascript Command ===
var source_mix_volume = 20
var source_mix_liquid_class = "96 Water Fast"
var source_mix_count = 2

var transfer_preaspirate_volume = 10
var transfer_volume = 5
var transfer_liquid_class = "96 Water Medium"

var destination_mix_volume = 20
var destination_mix_liquid_class ="96 Water Fast"
var destination_mix_count = 2

// === Main Protocol section>Javascript Command (Transfer DNA to assay plates) ===
if ((loop_count == 1) || (loop_count == 4) || (loop_count == 7))
{
var tip_location = 1;
var source_location = 4;
var destination_location = 7;
print(tip_location);
}

if ((loop_count == 2) || (loop_count == 5) || (loop_count == 8))
{
var tip_location = 2;
var source_location = 5;
var destination_location = 8;
print(tip_location);
}

if ((loop_count == 3) || (loop_count == 6) || (loop_count == 9))
{
var tip_location = 3;
var source_location = 6;
var destination_location = 9;
print(tip_location);
}

// === Main Protocol section>Display User Message Command ===
if (loop_count < 3)
{
task.skip();
}

if ((loop_count == 4) || (loop_count == 5) || (loop_count == 7))
{
task.skip();
}

// === Main Protocol section>Javascript Command (PicoGreen Addition) ===
var preaspirate_volume = 20
var transfer_volume = 100
var liquid_class = "96 Water Fast"




//picogreen_kingfisher_source_plate.pro

// === Startup Protocol>Javascipt Command ===
var sourcePlateType = "96w Clear CoStar Plate"
var sourcePlateType = "96w KingFisher Plate"

if (sourcePlateType == "96w Clear CoStar Plate")
{
sourceAspirationHeight = 40;
}

if (sourcePlateType == "96w KingFisher Plate")
{
sourceAspirationHeight = 3;
}

// === Main Protocol>Javascipt Command (disabled) ===
if (sourcePlateType == "96w Clear CoStar Plate")
{
sourceAspirationHeight = 40;
}

if (sourcePlateType == "96w KingFisher Plate")
{
sourceAspirationHeight = 3;
}

var "sourceAspirationHeight"

if (sourcePlateType == "96w Clear CoStar Plate")
{
sourceAspirationHeight = 40;
}

if (sourcePlateType == "96w KingFisher Plate")
{
sourceAspirationHeight = 3;
}




//rna_quant.pro

N/a




//rna_quant_standards_plate

N/a




//super_stamping.pro

// === Startup protocol section>Labware proxy logic Command ===
// This is the labware proxy logic tree 

// TIPS 
if (tipTypeProxy == "20ul filtered tips")
{
tipType = "96 Axygen VTF20RS Tip Box 20ul Filtered"; 
}

if (tipTypeProxy == "165ul filtered tips")
{
tipType = "96 Axygen VTF165LRS Tip Box 165ul Filtered";
}

// SOURCES 
if (sourceTypeProxy == "80ml diamond-bottom reservoir")
{
sourceType = "1 Axygen RESSW96LP PP 86ml Reservoir";
}

if (sourceTypeProxy == "300ml nalgene reservoir")
{
sourceType = "1 Thermo 12001301 PP 300ml Reservoir";
}

if (sourceTypeProxy == "96w qPCR plate")
{
sourceType = "96 AB 4483354 Optical PP 300ul qPCR";
}

if (sourceTypeProxy == "96w NEST PCR plate")
{
sourceType = "96 NEST 402601 PP 300ul PCR";
}

if (sourceTypeProxy == "96w PCR plate on CoolRack XT block")
{
sourceType = "96 Corning 432053 CoolRack XT PCR";
}

if (sourceTypeProxy == "96w KingFisher elution plate")
{
sourceType = "96 Thermo KingFisher PP 450ul SWP"
}

if (sourceTypeProxy == "96w Costar clear flat-bottom plate")
{
sourceType = "96 Costar 3610 White Clear Bottom PS 375ul SWP";
}

if (sourceTypeProxy == "96w Costar black flat-bottom plate")
{
sourceType = "96 Costar 3792 Black PS 375ul SWP";
}

if (sourceTypeProxy == "96w BRAND clear round-bottom plate")
{
sourceType = "96 Greiner 655101 PS Clr Rnd Well Flat Btm";
}

if (sourceTypeProxy == "96w 1ml round-bottom plate")
{
sourceType = "96 Thermo 260252 PP 1ml MWP";
}

if (sourceTypeProxy == "96w 2ml round-bottom plate")
{
sourceType = "96 Thermo 278743 PP 2ml DWP";
}

if (sourceTypeProxy == "96w 2ml V-bottom plate")
{
sourceType = "96 Costar 3961 PP 2ml assay block";
}

if (sourceTypeProxy == "96w IDT oligo DWP")
{
sourceType = "96 IDT Abgene Storage 2ml DWP";
}

if (sourceTypeProxy == "96w KingFisher 2ml plate")
{
sourceType = "96 Thermo KingFisher 2ml DWP";
}

if (sourceTypeProxy == "Analytical Para-dox rxn vials")
{
sourceType = "96 Analytical Para-dox 96960 Glass Flat Bottom";
}

// 384W SOURCE LABWARE
if (sourceTypeProxy == "384w qPCR plate")
{
sourceType = "384 AB 4483273 Optical PP 40ul qPCR";
}

if (sourceTypeProxy == "384w qPCR plate on CoolRack XT block")
{
sourceType = "384 Corning 432055 CoolRack XT PCR";
}

if (sourceTypeProxy == "384w clear flat-bottom plate")
{
sourceType = "384 Greiner 781101 PS clr flt btm";
}

if (sourceTypeProxy == "384w deep well V-bottom plate")
{
sourceType = "384 Corning 3342 PP 240ul VB";
}

// DESTINATIONS

if (destinationTypeProxy == "30ml agar Nunc OmniTray")
{
destinationType = "1 Thermo Nunc 140156 OmniTray";
}

if (destinationTypeProxy == "96w qPCR plate")
{
destinationType = "96 AB 4483354 Optical PP 300ul qPCR";
}

if (destinationTypeProxy == "96w NEST PCR plate")
{
destinationType = "96 NEST 402601 PP 300ul PCR";
}

if (destinationTypeProxy == "96w PCR plate on CoolRack XT block")
{
destinationType = "96 Corning 432053 CoolRack XT PCR";
}

if (destinationTypeProxy == "96w KingFisher elution plate")
{
destinationType = "96 Thermo KingFisher PP 450ul SWP"
}

if (destinationTypeProxy == "96w Costar clear flat-bottom plate")
{
destinationType = "96 Costar 3610 White Clear Bottom PS 375ul SWP";
}

if (destinationTypeProxy == "96w Costar black flat-bottom plate")
{
destinationType = "96 Costar 3792 Black PS 375ul SWP";
}

if (destinationTypeProxy == "96w BRAND clear round-bottom plate")
{
destinationType = "96 Greiner 655101 PS Clr Rnd Well Flat Btm";
}

if (destinationTypeProxy == "96w 1ml round-bottom plate")
{
destinationType = "96 Thermo 260252 PP 1ml MWP";
}

if (destinationTypeProxy == "96w 2ml round-bottom plate")
{
destinationType = "96 Thermo 278743 PP 2ml DWP";
}

if (destinationTypeProxy == "96w 2ml V-bottom plate")
{
destinationType = "96 Costar 3961 PP 2ml assay block";
}

if (destinationTypeProxy == "96w IDT oligo DWP")
{
destinationType = "96 IDT Abgene Storage 2ml DWP";
}

if (destinationTypeProxy == "96w KingFisher 2ml plate")
{
destinationType = "96 Thermo KingFisher 2ml DWP";
}

if (destinationTypeProxy == "Analytical Para-dox rxn vials")
{
destinationType = "96 Analytical Para-dox 96960 Glass Flat Bottom";
}

// 384W DESTINATION LABWARE
if (destinationTypeProxy == "384w qPCR plate")
{
destinationType = "384 AB 4483273 Optical PP 40ul qPCR";
}

if (destinationTypeProxy == "384w qPCR plate on CoolRack XT block")
{
destinationType = "384 Corning 432055 CoolRack XT PCR";
}

if (destinationTypeProxy == "384w clear flat-bottom plate")
{
destinationType = "384 Greiner 781101 PS clr flt btm";
}

if (destinationTypeProxy == "384w deep well V-bottom plate")
{
destinationType = "384 Corning 3342 PP 240ul VB";
}

// === Startup protocol section>Process Control Logic Command ===
var sourceToggle384w = sourceType.indexOf("384") != -1 ? 1 : 0;
var destinationToggle384w = destinationType.indexOf("384") != -1 ? 1 : 0;

if (sourcePlateCount == destinationPlateCount) {
    if (sourceToggle384w == 0 && destinationToggle384w == 0) {
        var processSelectionValue = 1;
        var worktableLayout = "96w One-to-One";
    } else if (sourceToggle384w == 1 && destinationToggle384w == 1 && _384wTransferType == "One-to-One") {
        var processSelectionValue = 2;
        var worktableLayout = "384w One-to-One";
    }
}

if (_384wTransferType == "Consolidation" && destinationToggle384w == 1) {
    var processSelectionValue = 3;
    var worktableLayout = "96w to 384w Consolidation";
}

if (_384wTransferType == "Split" && sourceToggle384w == 1) {
    var processSelectionValue = 4;
    var worktableLayout = "384w to 96w Split";
}

if (sourcePlateCount == 1 && destinationPlateCount > sourcePlateCount && sourceToggle384w == 0 && destinationToggle384w == 0) {
    var processSelectionValue = 5;
    var worktableLayout = "96w One-to-Many";
}

if (_384wTransferType == "One-to-Many" && (sourceToggle384w == 1 || destinationToggle384w == 1) && (sourcePlateCount == 1 || sourceQuadrantCount == 1)) {
    var processSelectionValue = 6;
    var worktableLayout = "384w One-to-Many";
}

if (destinationPlateCount > sourcePlateCount && destinationPlateCount == 1 && sourceToggle384w == 0 && destinationToggle384w == 0) {
    var processSelectionValue = 7;
    var worktableLayout = "96w Many-to-One";
}

if (_384wTransferType == "Many-to-One" && (sourceToggle384w == 1 || destinationToggle384w == 1) && (destinationPlateCount == 1 || destinationQuadrantCount == 1)) {
    var processSelectionValue = 8;
    var worktableLayout = "384w Many-to-One";
}

// === Startup protocol section>Worktable Setting logic Command ===
if ((worktableLayout == "96w One-to-One") || (worktableLayout == "384w One-to-One"))
{
var slot1 = tipType;
var slot2 = tipType;
var slot3 = tipType;
var slot4 = sourceType;
var slot5 = sourceType;
var slot6 = sourceType;
var slot7 = destinationType;
var slot8 = destinationType;
var slot9 = destinationType;
}

if (worktableLayout == "96w to 384w Consolidation")
{
var slot1 = tipType;
var slot2 = tipType;
var slot3 = tipType;
var slot4 = sourceType;
var slot5 = sourceType;
var slot6 = tipType;
var slot7 = sourceType;
var slot8 = sourceType;
var slot9 = destinationType;
}

if (worktableLayout == "384w to 96w Split")
{
var slot1 = tipType;
var slot2 = tipType;
var slot3 = tipType;
var slot4 = destinationType;
var slot5 = destinationType;
var slot6 = tipType;
var slot7 = destinationType;
var slot8 = destinationType;
var slot9 = sourceType;
}

if (worktableLayout == "96w One-to-Many")
{
var slot1 = destinationType;
var slot2 = destinationType;
var slot3 = destinationType;
var slot4 = destinationType;
var slot5 = destinationType;
var slot6 = destinationType;
var slot7 = destinationType;
var slot8 = tipType;
var slot9 = sourceType;
}

if (worktableLayout == "384w One-to-Many")
{
var slot1 = destinationType;
var slot2 = destinationType;
var slot3 = destinationType;
var slot4 = destinationType;
var slot5 = destinationType;
var slot6 = destinationType;
var slot7 = destinationType;
var slot8 = tipType;
var slot9 = sourceType;
}

if (worktableLayout == "96w Many-to-One")
{
var slot1 = sourceType;
var slot2 = sourceType;
var slot3 = sourceType;
var slot4 = sourceType;
var slot5 = sourceType;
var slot6 = sourceType;
var slot7 = sourceType;
var slot8 = tipType;
var slot9 = destinationType;
}

if (worktableLayout == "384w Many-to-One")
{
var slot1 = sourceType;
var slot2 = sourceType;
var slot3 = sourceType;
var slot4 = sourceType;
var slot5 = sourceType;
var slot6 = sourceType;
var slot7 = sourceType;
var slot8 = tipType;
var slot9 = destinationType;
}

// === Startup protocol section>Print variables to the log Command ===
print(sourceType)
print(destinationType)
print(tipType)

print(sourceToggle384w)
print(destinationToggle384w)
print(sourcePlateCount)
print(destinationPlateCount)
print(_384wTransferType)

print(worktableLayout)

print(slot1)
print(slot2)
print(slot3)
print(slot4)
print(slot5)
print(slot6)
print(slot7)
print(slot8)
print(slot9)

// === Main Protocol section>Liquid Classes, Mixing Classes, Special Exceptions Command ===
// TRANSFER LIQUID CLASSES 

if (liquidClassProxy == "Water")
{
    if (transferVolume <= 5)
    {
    var transferLiquidClass = "96 Water Slow";
    }

    else if (5 < transferVolume <= 51)
    {
    var transferLiquidClass = "96 Water Medium";
    }

    else if (51 < transferVolume <= 200)
    {
    var transferLiquidClass = "96 Water Fast";
    }
}

if (liquidClassProxy == "Ethanol")
{
    if (transferVolume <= 5)
    {
    var transferLiquidClass = "96 Ethanol Slow";
    }

    else if (5 < transferVolume <= 51)
    {
    var transferLiquidClass = "96 Ethanol Medium";
    }

    else if (51 < transferVolume <= 200)
    {
    var transferLiquidClass = "96 Ethanol Fast";
    }
}

if (liquidClassProxy == "Detergent")
{
    if (transferVolume <= 5)
    {
    var transferLiquidClass = "96 Detergent Slow";
    }

    else if (5 < transferVolume <= 51)
    {
    var transferLiquidClass = "96 Detergent Medium";
    }

    else if (51 < transferVolume <= 200)
    {
    var transferLiquidClass = "96 Detergent Fast";
    }
}

if (liquidClassProxy == "Viscous")
{
    if (transferVolume <= 5)
    {
    var transferLiquidClass = "96 Viscous Slow";
    }

    else if (5 < transferVolume <= 51)
    {
    var transferLiquidClass = "96 Viscous Medium";
    }

    else if (51 < transferVolume <= 200)
    {
    var transferLiquidClass = "96 Viscous Fast";
    }
}

// MIXING LIQUID CLASSES
if (mixLiquidClassProxy == "Gentle")
{
var mixLiquidClass = "96 Water Slow";
}

if (mixLiquidClassProxy == "Medium")
{
var mixLiquidClass = "96 Water Medium";
}

if (mixLiquidClassProxy == "Fast")
{
var mixLiquidClass = "96 TEMPLATE Max Speed";
}

if (mixLiquidClassProxy == "Very Fast")
{
var mixLiquidClass = "96 Water Very Fast";
}

if (mixLiquidClassProxy == "Inversion")
{
var mixLiquidClass = "96 Water Inversion Mix";
}

// STERILE DISPENSE HANDLING
if (sterileDispenseToggle == 1)
{
dispenseHeight = 20; 
}

// SPECIAL EXCEPTIONS
// (20UL TIPS + DWP-SPECIFIC LOGIC TREE)
if ((tipType == "96 Axygen VTF20RS Tip Box 20ul Filtered") && (sourceType.indexOf("2ml") != -1))
{
aspirateHeight = 22.5;
}

if ((tipType == "96 Axygen VTF20RS Tip Box 20ul Filtered") && (destinationType.indexOf("2ml") != -1) && (sterileDispenseToggle == 0))
{
dispenseHeight = 22.5;
}

if ((destinationType.indexOf("2ml") != -1) && (sterileDispenseToggle == 1))
{
dispenseHeight = 40.0;
}

// Analytical Paradox chemical rxn block glass vial logic tree
if ((tipType == "96 Axygen VTF20RS Tip Box 20ul Filtered") && (sourceType == "96 Analytical Para-dox 96960 Glass Flat Bottom") && (aspirateHeight == 0))
{
aspirateHeight = 1;
}

if ((tipType == "96 Axygen VTF20RS Tip Box 20ul Filtered") && (destinationType == "96 Analytical Para-dox 96960 Glass Flat Bottom") && (dispenseHeight == 0) && (sterileDispenseToggle == 0))
{
dispenseHeight = 1;
}  

// OmniTray handling logic tree
omniTrayToggle = "False";
if (destinationType == "1 Thermo Nunc 140156 OmniTray")
{
omniTrayToggle = "True";
}
print(omniTrayToggle);

// === Main Protocol section>96w One-to-One>Mix Command ===
if (sourceMixToggle == 0)
{
task.skip();
}

// === Main Protocol section>96w One-to-One>Dispense Command ===
if (omniTrayToggle == "False"){

    if (tipTouchToggle == 0 && sterileDispenseToggle == 0){
    task.Performtiptouch = false;
    task.Tiptouchretractdistance = 6;
    }

    if (tipTouchToggle == 0 && sterileDispenseToggle == 1){
    task.Performtiptouch = false;
    task.Tiptouchretractdistance = 0;
    }

    if (tipTouchToggle == 1 && sterileDispenseToggle == 0){
    task.Performtiptouch = true;
    task.Tiptouchretractdistance = 6;
    }

    if (tipTouchToggle == 1 && sterileDispenseToggle == 1){
    task.Performtiptouch = true;
    }
}

// OmniTray handling logic tree
if (omniTrayToggle == "True"){
task.Liquidclass = "96 Water Slow";
task.Distancefromwellbottom = 0.1;
task.Dynamictipretraction = 0.2;
task.Performtiptouch = true;
task.Whichsidestousefortiptouch = "None";
task.Tiptouchretractdistance = dispenseHeight;
}

// === Main Protocol section>96w One-to-One>Mix Command ===
if (destinationMixToggle == 0){
task.skip();
}

if (tipTouchToggle == 0){
task.Performtiptouch = false;
}

if (sterileDispenseToggle == 0){
task.Tiptouchretractdistance = 6;
}

if (sterileDispenseToggle == 1){
task.Tiptouchretractdistance = 0;
}

// === Main Protocol section>384w One-to-One>Mix Command ===
if (sourceMixToggle == 0)
{
task.skip();
}

// LOGIC TREE FOR SOURCE QUADRANT SELECTION
if (sourceQ1Toggle == 1)
{
task.Wellselection = [[1, 1]];
}

if (sourceQ2Toggle == 1)
{
task.Wellselection = [[1, 2]];
}

if (sourceQ3Toggle == 1)
{
task.Wellselection = [[2, 1]];
}

if (sourceQ4Toggle == 1)
{
task.Wellselection = [[2, 2]];
}

// === Main Protocol section>384w One-to-One>Aspirate Command ===
// LOGIC TREE FOR SOURCE QUADRANT SELECTION
if (sourceQ1Toggle == 1)
{
task.Wellselection = [[1, 1]];
}

if (sourceQ2Toggle == 1)
{
task.Wellselection = [[1, 2]];
}

if (sourceQ3Toggle == 1)
{
task.Wellselection = [[2, 1]];
}

if (sourceQ4Toggle == 1)
{
task.Wellselection = [[2, 2]];
}


// === Main Protocol section>384w One-to-One>Dispense Command ===
if ((tipTouchToggle == 1) && (destinationMixToggle == 0))
{
task.Performtiptouch = true;
task.Whichsidestousefortiptouch = "West";

    if (sterileDispenseToggle == 0)
    {
    task.Tiptouchretractdistance = 6;
    }

    if (sterileDispenseToggle == 1)
    {
    task.Tiptouchretractdistance = 0;
    }
}

// LOGIC TREE FOR DESTINATION QUADRANT SELECTION
if (destinationQ1Toggle == 1)
{
task.Wellselection = [[1, 1]];
}

if (destinationQ2Toggle == 1)
{
task.Wellselection = [[1, 2]];
}

if (destinationQ3Toggle == 1)
{
task.Wellselection = [[2, 1]];
}

if (destinationQ4Toggle == 1)
{
task.Wellselection = [[2, 2]];
}

// === Main Protocol section>384w One-to-One>Mix Command ===
if (destinationMixToggle == 0)
{
task.skip();
}

if ((destinationMixToggle == 1) && (tipTouchToggle == 1))
{
task.Performtiptouch = true;
task.Whichsidestousefortiptouch = "West";

    if (sterileDispenseToggle == 0)
    {
    task.Tiptouchretractdistance = 6;
    }

    if (sterileDispenseToggle == 1)
    {
    task.Tiptouchretractdistance = 0;
    }
}

// LOGIC TREE FOR DESTINATION QUADRANT SELECTION
if (destinationQ1Toggle == 1)
{
task.Wellselection = [[1, 1]];
}

if (destinationQ2Toggle == 1)
{
task.Wellselection = [[1, 2]];
}

if (destinationQ3Toggle == 1)
{
task.Wellselection = [[2, 1]];
}

if (destinationQ4Toggle == 1)
{
task.Wellselection = [[2, 2]];
}

// === Main Protocol section>96w to 384w consolidation>Javascipt Command ===
// SET LABWARE LOCATIONS FOR LIQUID HANDLING STEPS
var destinationPlateLocation = 9;

if (loopCount == 1)
{
var tipBoxLocation = 1;
var sourcePlateLocation = 4;
}

if (loopCount == 2)
{
var tipBoxLocation = 2;
var sourcePlateLocation = 5;
}

if (loopCount == 3)
{
var tipBoxLocation = 3;
var sourcePlateLocation = 7;
}

if (loopCount == 4)
{
var tipBoxLocation = 6;
var sourcePlateLocation = 8;
}

// LOGIC TREE TO SKIP UN-NEEDED QUADRANT DISPENSES
var skipToggle = 0;

if ((destinationQ1Toggle == 0) && (loopCount == 1))
{
skipToggle = 1;
}

if ((destinationQ2Toggle == 0) && (loopCount == 2)) 
{
skipToggle = 1;
}

if ((destinationQ3Toggle == 0) && (loopCount == 3))
{
skipToggle = 1;
}

if ((destinationQ4Toggle == 0) && (loopCount == 4)) 
{
skipToggle = 1;
}

print(skipToggle)

// === Main Protocol section>96w to 384w consolidation>Tips On Command ===
f (skipToggle == 1)
{
task.skip();
}

// === Main Protocol section>96w to 384w consolidation>Mix in source Command ===
if (skipToggle == 1)
{
task.skip();
}

if (sourceMixToggle == 0)
{
task.skip();
}

// === Main Protocol section>96w to 384w consolidation>Aspirate Command ===
if (skipToggle == 1)
{
task.skip();
}

// === Main Protocol section>96w to 384w consolidation>Dispense Command ===
if (skipToggle == 1)
{
task.skip();
}

if ((tipTouchToggle == 1) && (destinationMixToggle == 0))
{
task.Performtiptouch = true;
task.Whichsidestousefortiptouch = "West";

    if (sterileDispenseToggle == 0)
    {
    task.Tiptouchretractdistance = 6;
    }

    if (sterileDispenseToggle == 1)
    {
    task.Tiptouchretractdistance = 0;
    }
}

// LOGIC TREE FOR DESTINATION QUADRANT SELECTION
if ((loopCount == 1) && (skipToggle == 0))
{
task.Wellselection = [[1, 1]];
print("Q1 dispensing");
}

if ((loopCount == 2) && (skipToggle == 0))
{
task.Wellselection = [[1, 2]];
print("Q2 dispensing");
}

if ((loopCount == 3) && (skipToggle == 0))
{
task.Wellselection = [[2, 1]];
print("Q3 dispensing");
}

if ((loopCount == 4) && (skipToggle == 0))
{
task.Wellselection = [[2, 2]];
print("Q4 dispensing");
}

// === Main Protocol section>96w to 384w consolidation>Mix in Q1/Q2/Q3/Q4 Command ===
if (skipToggle == 1)
{
task.skip();
}

if (destinationMixToggle == 0)
{
task.skip();
}

if ((destinationMixToggle == 1) && (tipTouchToggle == 1))
{
task.Performtiptouch = true;
task.Whichsidestousefortiptouch = "West";

    if (sterileDispenseToggle == 0)
    {
    task.Tiptouchretractdistance = 6;
    }

    if (sterileDispenseToggle == 1)
    {
    task.Tiptouchretractdistance = 0;
    }
}

// LOGIC TREE FOR DESTINATION QUADRANT SELECTION
if (loopCount == 1)
{
task.Wellselection = [[1, 1]];
}

if (loopCount == 2)
{
task.Wellselection = [[1, 2]];
}

if (loopCount == 3)
{
task.Wellselection = [[2, 1]];
}

if (loopCount == 4)
{
task.Wellselection = [[2, 2]];
}

// === Main Protocol section>96w to 384w consolidation>Tips Off Command ===
if (skipToggle == 1)
{
task.skip();
}

// === Main Protocol section>96w to 384w split> Command ===






